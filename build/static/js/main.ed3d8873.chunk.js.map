{"version":3,"sources":["components/assets/output-onlinepngtools.png","components/Navbar.jsx","services/cryptoApi.js","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/Exchanges.jsx","components/Homepage.jsx","services/cryptoNewsApi.js","components/News.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handelResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timeperiod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery","Cryptocurrencies","simplified","cryptosList","data","isFetching","coins","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","filter","coin","name","toLowerCase","includes","console","log","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","id","title","rank","extra","iconUrl","hoverable","millify","price","change","marketCap","Typography","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","useParams","setTimeperiod","cryptoDetails","stats","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","HTMLReactParser","description","links","link","type","href","rel","Panel","Collapse","Exchanges","exchangesList","exchanges","span","exchange","showArrow","header","marketShare","Homepage","globalStats","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","style","maxWidth","maxHeight","borderRadius","image","thumbnail","contentUrl","alt","provider","moment","dataPublished","startOf","fromNow","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.ed3d8873.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/output-onlinepngtools.235dbf29.png\";","import React, {useState, useEffect} from 'react'\r\nimport { Button, Menu, Typography, Avatar } from \"antd\"\r\nimport { Link } from 'react-router-dom';\r\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons'\r\nimport  icon from \"./assets/output-onlinepngtools.png\"\r\n\r\nconst Navbar = () => {\r\n    const [activeMenu, setActiveMenu] = useState(true)\r\n    const [screenSize, setScreenSize] = useState(null)\r\n\r\n    useEffect(() => {\r\n       const handelResize =() => setScreenSize(window.innerWidth)\r\n\r\n       window.addEventListener('resize', handelResize);\r\n       handelResize();\r\n\r\n       return ( ) => window.removeEventListener('resize', handelResize)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n       if(screenSize < 768){\r\n           setActiveMenu(false)\r\n       } else {\r\n           setActiveMenu(true)\r\n       }\r\n     }, [screenSize])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo-container\">\r\n                <Avatar  src={icon} size=\"small\" />\r\n                <Typography.Title level={2} className=\"logo\">\r\n                    <Link to=\"/\">Digicoin</Link>\r\n                </Typography.Title>\r\n                <Button className=\"menu-control-container\"  onClick={() => setActiveMenu(!activeMenu)}>\r\n                    <MenuOutlined />\r\n                </Button>\r\n            </div>\r\n            {activeMenu && (\r\n                <Menu theme=\"light\">\r\n                <Menu.Item icon={<HomeOutlined/>}>\r\n                    <Link to=\"/\">Home</Link>\r\n                </Menu.Item>\r\n                <Menu.Item icon={<FundOutlined/>}>\r\n                    <Link to=\"/cryptocurrencies\">Cryptocurrency</Link>\r\n                </Menu.Item>\r\n                <Menu.Item icon={<MoneyCollectOutlined/>}>\r\n                    <Link to=\"/exchanges\">Exchanges</Link>\r\n                </Menu.Item>\r\n                <Menu.Item icon={<BulbOutlined/>}>\r\n                    <Link to=\"/News\">News</Link>\r\n                </Menu.Item>\r\n\r\n            </Menu>\r\n            \r\n        \r\n            )}\r\n\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\"\r\n\r\nconst cryptoApiHeaders = {\r\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n    'x-rapidapi-key': '758d781bb2msh824a4c78b23cf64p1da977jsnefc727b510e0'\r\n}\r\n\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders })\r\n\r\nexport const cryptoApi = createApi({\r\n    reducerPath: 'cryptoApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints: (builder) => ({\r\n        getCryptos: builder.query({\r\n            query: (count)=> createRequest(`/coins?limit=${count}`),\r\n        }),\r\n        getExchanges: builder.query({\r\n            query: () => createRequest('/exchanges'),\r\n          }),\r\n        getCryptoDetails: builder.query({\r\n            query: (coinId) => createRequest(`/coin/${coinId}`),\r\n        }),\r\n        getCryptoHistory: builder.query({\r\n            query: ({ coinId, timeperiod }) => createRequest(`coin/${coinId}/history/${timeperiod}`),\r\n          })\r\n    })\r\n}) \r\n\r\nexport const {\r\n    useGetCryptosQuery, useGetCryptoDetailsQuery, useGetExchangesQuery, useGetCryptoHistoryQuery\r\n } = cryptoApi;","import React, { useEffect, useState } from 'react'\r\nimport millify from 'millify'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Row, Col, Input } from 'antd'\r\nimport { useGetCryptosQuery } from '../services/cryptoApi'\r\n\r\nconst Cryptocurrencies = ({simplified}) => {\r\n    //getting first 20 crypto coins\r\n    const count=simplified?20:100;\r\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(count)\r\n    // getting all the coins info\r\n    const [cryptos, setCryptos] =useState(cryptosList?.data?.coins)\r\n    const [searchTerm, setSearchTerm ] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        // setCryptos(cryptosList?.data?.coins)\r\n\r\n        const filteredData = cryptosList?.data?.coins.filter((coin) =>coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\r\n\r\n        setCryptos(filteredData)\r\n\r\n    }, [cryptosList, searchTerm])\r\n    console.log(cryptos)\r\n    if (isFetching) return 'Loading...'\r\n    return (\r\n       <>\r\n       {/* hide the search bar from home page and show it in cryptocurrencies page */}\r\n       {!simplified && (\r\n                   <div className=\"search-crypto\">\r\n                   <Input placeholder=\"Search\" onChange={(e) => setSearchTerm(e.target.value)} />\r\n               </div>\r\n       )}\r\n\r\n        <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n            {cryptos?.map((currency) => (\r\n                <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n                    <Link to={`/crypto/${currency.id}`}>\r\n                        <Card \r\n                                title={`${currency.rank} ${currency.name}`}\r\n                                extra={<img className=\"crypto-image\" src={currency.iconUrl}/>}\r\n                                hoverable\r\n                                >\r\n                                    <p>price: {millify(currency.price)}</p>\r\n                                    <p>Daily Change: {millify(currency.change)}%</p>\r\n                                    <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                        </Card>\r\n                    </Link>\r\n                </Col>\r\n            ))}\r\n\r\n        </Row>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default Cryptocurrencies\r\n\r\n","import React from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\nimport {Col, Row, Typography} from \"antd\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n\r\n    const coinPrice = [];\r\n    const coinTimestamp = []\r\n\r\n    for( let i=0; i<coinHistory?.data?.history?.length; i+= 1) {\r\n        coinPrice.push(coinHistory.data.history[i].price)\r\n        coinTimestamp.push(new Date(coinHistory.data.history[i].timestamp).toLocaleDateString());\r\n    }\r\n    const data = {\r\n        labels: coinTimestamp,\r\n        datasets: [\r\n            {\r\n                label: \"price in USD\",\r\n                data: coinPrice,\r\n                fill: false,\r\n                backgroundColor: '#000',\r\n                borderColor: '#fff'\r\n            }\r\n        ]\r\n    }\r\n\r\n    const options = {\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                beginAtZero: true,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      }\r\n\r\n    return (\r\n        <>\r\n          <Row className=\"chart-header\">\r\n              <Title level={2} className=\"chart-title\">{coinName} Price Chart</Title>\r\n                <Col className=\"price-container\">\r\n                    <Title level={5} className=\"price-change\">{coinHistory?.data?.change}%</Title>\r\n                    <Title level={5} className=\"price-price\">Current {coinName} Price: $ {currentPrice} %</Title>\r\n              </Col>\r\n              </Row> \r\n              <Line data={data} options={options} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LineChart\r\n","import React, {useState} from 'react'\r\nimport HTMLReactParser from 'html-react-parser'\r\nimport { useParams } from 'react-router-dom'\r\nimport millify from 'millify'\r\nimport { Col, Row, Typography, Select } from \"antd\"\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\n\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\r\n// import Loader from './Loader';\r\nimport LineChart from './LineChart';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n  const { coinId } = useParams();\r\n  const [timeperiod, setTimeperiod] = useState('7d');\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\r\n  const cryptoDetails = data?.data?.coin;\r\n\r\n  if (isFetching) return 'Loading...';\r\n\r\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n  const stats = [\r\n    { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n    { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n  ];\r\n\r\n  const genericStats = [\r\n    { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n    { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n    { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n  ];\r\n\r\n  return (\r\n    <Col className=\"coin-detail-container\">\r\n      <Col className=\"coin-heading-container\">\r\n        <Title level={2} className=\"coin-name\">\r\n          {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\r\n        </Title>\r\n        <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\r\n      </Col>\r\n      <Select \r\n        defaultValue=\"7d\" className=\"select-timeperiod\"\r\n        placeholder=\"Select Timeperiod\" \r\n        onChange={(value) => setTimeperiod(value)}>\r\n        {time.map((date) => <Option key={date}>{date}</Option>)}\r\n      </Select>\r\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\r\n      <Col className=\"stats-container\">\r\n        <Col className=\"coin-value-statistics\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\r\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n          </Col>\r\n          {stats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n\r\n\r\n\r\n        <Col className=\"other-stats-info\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\r\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n          </Col>\r\n          {genericStats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n\r\n                  {/* information */}\r\n\r\n      <Col className=\"coin-desc-link\">\r\n        <Row className=\"coin-desc\">\r\n          <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\r\n          {HTMLReactParser(cryptoDetails.description)}\r\n        </Row>\r\n\r\n                    {/* coin links */}\r\n\r\n        <Col className=\"coin-links\">\r\n          <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\r\n          {cryptoDetails.links?.map((link) => (\r\n            <Row className=\"coin-link\" key={link.name}>\r\n              <Title level={5} className=\"link-name\">{link.type}</Title>\r\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\r\n            </Row>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default CryptoDetails;\r\n\r\n","import React from 'react'\r\nimport millify from 'millify'\r\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd'\r\nimport HTMLReactParser from 'html-react-parser'\r\nimport { useGetExchangesQuery } from \"../services/cryptoApi\"\r\n\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\nconst Exchanges = () => {\r\n    const { data, isFetching } = useGetExchangesQuery();\r\n    const exchangesList =data?.data?.exchanges\r\n\r\n    if (isFetching) return \"Loading...\"\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={6}>Exchanges</Col>\r\n                <Col span={6}>24h trade volume</Col>\r\n                <Col span={6}>Markets</Col>\r\n                <Col span={6}>Change</Col>\r\n            </Row>\r\n            <Row>\r\n                {exchangesList.map((exchange) => (\r\n                    <Col span={24}>\r\n                        <Collapse>\r\n                        <Panel\r\n                        key={exchange.id}\r\n                        showArrow={false}\r\n                        header={(\r\n                            <Row key={exchange.id}>\r\n                                <Col span={6}>\r\n                                    <Text><strong>{exchange.rank}</strong></Text>\r\n                                    <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\r\n                                    <Text><strong>{exchange.name}</strong></Text>\r\n                                </Col>\r\n                                <Col span={6}>${millify(exchange.volume)}</Col>\r\n                                <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                                <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                            </Row>\r\n                        )}\r\n                           >\r\n                               {HTMLReactParser(exchange.description || '')}\r\n                            </Panel></Collapse>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Exchanges\r\n\r\n","import React from 'react'\r\nimport millify from 'millify'\r\nimport { Typography, Row, Col, Statistic } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { useGetCryptosQuery } from '../services/cryptoApi'\r\nimport { Cryptocurrencies, News } from '.'\r\n\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Homepage = () => {\r\n    const { data, isFetching } = useGetCryptosQuery(20);\r\n    const globalStats = data?.data?.stats;\r\n\r\n    if (isFetching) return 'Loading...'\r\n    return (\r\n       <>\r\n       <Title level={2} className=\"heading\">Universal Crypto Statistics</Title>\r\n       <Row>\r\n            <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total}/></Col>\r\n            <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)}/></Col>\r\n            <Col span={12}><Statistic title=\"Total Maeket Cap\" value={millify(globalStats.totalMarketCap)}/></Col>\r\n            <Col span={12}><Statistic title=\"Total 24h Volume\" value={millify(globalStats.total24hVolume)}/></Col>\r\n            <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)}/></Col>\r\n       </Row>\r\n       <div className=\"home-heading-container\">\r\n            <Title level={2} className=\"home-title\">Top 20 CryptoCurrencies in the world</Title>\r\n            <Title level={2} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show More</Link></Title>\r\n       </div>\r\n       <Cryptocurrencies simplified/>\r\n       <div className=\"home-heading-container\">\r\n            <Title level={2} className=\"home-title\">Latest Cryptocurrency News</Title>\r\n            <Title level={2} className=\"show-more\"><Link to=\"/news\">Show More</Link></Title>\r\n       </div>\r\n       <News simplified />\r\n       </>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\"\r\n\r\n\r\nconst cryptoNewsHeaders = {\r\n    'x-bingapis-sdk': 'true',\r\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n    'x-rapidapi-key': '758d781bb2msh824a4c78b23cf64p1da977jsnefc727b510e0'\r\n}\r\n\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders })\r\n\r\n\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: 'cryptoNewsApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints: (builder) => ({\r\n        getCryptoNews: builder.query({\r\n            query: ({ newsCategory, count})=> createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\r\n        })\r\n    })\r\n}) \r\n\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;","import React, { useState } from 'react'\r\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\r\nimport moment from 'moment'\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\n\r\nconst { Text, Title } = Typography;\r\n\r\nconst { Option } = Select;\r\n\r\nconst demoImage = \"https://images.unsplash.com/photo-1627454822466-0b05090cb737?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTR8fGNyeXB0b2N1cnJlbmN5fGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=150&q=60\"\r\n\r\nconst News = ({simplified}) => {\r\n    const [newsCategory, setNewsCategory] = useState('Cryptocurrency')\r\n    const { data: cryptoNews } = useGetCryptoNewsQuery({newsCategory, count: simplified ? 9 : 200 })\r\n    const { data } = useGetCryptosQuery(200)\r\n\r\n\r\n    if(!cryptoNews?.value) return 'Loading...'\r\n\r\n    return (\r\n        <Row gutter={[ 24, 24]}>\r\n            {!simplified && (\r\n                 <Col span={24}>\r\n                     <Select \r\n                        showSearch\r\n                        className=\"select-news\"\r\n                        placeholder=\"Select a Crypto\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={(value) => setNewsCategory(value)}\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                     >\r\n                         <Option value=\"Cryptocurrency\"></Option>\r\n                         {data?.data?.coins.map((coin) => <Option value={coin.name}>{coin.name}</Option>)}\r\n                     </Select>\r\n                </Col>\r\n            )}\r\n            {cryptoNews.value.map((news, i) => (\r\n                <Col xs={24} sm={12} lg={8} key={i}>\r\n                    <Card hoverable className=\"news-card\">\r\n                        <a href={news.url} target=\"blank\" rel=\"noreferrer\">\r\n                            <div className=\"news-image-container\">\r\n                                <Title className=\"news-title\" level={4}>\r\n                                    {news.name}\r\n                                </Title>\r\n                                    {/* //image for the news cards */}\r\n                                    <img style={{ maxWidth: '200px', maxHeight: '100px', borderRadius: '0.7em' }} src={news?.image?.thumbnail?.contentUrl|| demoImage} alt=\"news\" />\r\n                            </div>\r\n                            <p>\r\n                                {news.description > 50 ? '${news.description.substring(0, 50,)}...'\r\n                                : news.description}\r\n                            </p>\r\n                            <div className=\"provider-container\">\r\n                                <div>\r\n                                    <Avatar src={news.provider[0] ?.image?.thumbnail?.contentUrl || demoImage } alt=\"news\" />\r\n                                    <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n                                </div>\r\n                                <Text>{moment(news.dataPublished).startOf(\"SS\").fromNow()}</Text>\r\n\r\n                            </div>\r\n                        </a>\r\n                    </Card>\r\n                </Col>\r\n            ))}\r\n\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React from 'react'\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport { Layout, Typography, Space } from 'antd';\r\nimport {Navbar, Exchanges, Homepage, Cryptocurrencies, CryptoDetails, News} from \"./components\"\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"navbar\">\r\n                <Navbar />\r\n            </div>\r\n            <div className=\"main\">\r\n                <Layout>\r\n                    <div className='routes'>\r\n                        <Switch >\r\n                            <Route exact path=\"/\">\r\n                                <Homepage />\r\n                            </Route>\r\n                            <Route exact path=\"/exchanges\">\r\n                                <Exchanges />\r\n                            </Route>\r\n                            <Route exact path=\"/cryptocurrencies\">\r\n                                <Cryptocurrencies />\r\n                            </Route>\r\n                            <Route exact path=\"/crypto/:coinId\">\r\n                                <CryptoDetails />\r\n                            </Route>\r\n                            <Route exact path=\"/news\">\r\n                                <News />\r\n                            </Route>\r\n                        </Switch>\r\n                    </div>\r\n                </Layout>\r\n                \r\n                <div className='footer'>\r\n                    <Typography.Title  level={5} style={{ color: 'white' , textAlign: 'center'}}>\r\n                        Digicoin <br />\r\n                        All rights reserved\r\n                    </Typography.Title>\r\n                    <Space>\r\n                        <Link to=\"/\">Home</Link>\r\n                        <Link to=\"/exchanges\">Exchanges</Link>\r\n                        <Link to=\"/news\">News</Link>\r\n                    </Space>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { cryptoApi } from \"../services/cryptoApi\";\r\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\r\n\r\n\r\n\r\nexport default configureStore({\r\n    reducer:{\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n    },\r\n})","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport App from './App';\r\nimport 'antd/dist/antd.css';\r\nimport store from './app/store'\r\nimport { Provider } from 'react-redux'\r\n\r\n\r\nReactDOM.render(\r\n    <Router >\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </Router>, \r\n    document.getElementById('root') \r\n    );"],"sourceRoot":""}